#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–∑–≥–æ–≤ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç API endpoints –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —É –∫–∞–∫–∏—Ö –º–æ–∑–≥–æ–≤ –µ—Å—Ç—å disabled connections.
"""

import requests
import json
from typing import Dict, List

def check_brain_connections(brain_id: int, api_url: str = "http://localhost:8000") -> Dict:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–≤—è–∑–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞."""
    try:
        response = requests.get(f"{api_url}/api/population/{brain_id}")
        if response.status_code == 200:
            data = response.json()
            connections = data.get('connections', [])
            
            total_connections = len(connections)
            active_connections = len([c for c in connections if c.get('enabled', True)])
            disabled_connections = len([c for c in connections if not c.get('enabled', True)])
            
            disabled_list = [
                {
                    'id': c['id'],
                    'from': c['from'],
                    'to': c['to'],
                    'weight': c['weight']
                }
                for c in connections if not c.get('enabled', True)
            ]
            
            return {
                'brain_id': brain_id,
                'status': 'success',
                'total_connections': total_connections,
                'active_connections': active_connections,
                'disabled_connections': disabled_connections,
                'disabled_list': disabled_list,
                'has_disabled': disabled_connections > 0
            }
        else:
            return {
                'brain_id': brain_id,
                'status': 'error',
                'error': f"HTTP {response.status_code}"
            }
    except Exception as e:
        return {
            'brain_id': brain_id,
            'status': 'error',
            'error': str(e)
        }

def find_brains_with_disabled_connections(brain_range: range = range(1, 21), api_url: str = "http://localhost:8000"):
    """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –º–æ–∑–≥–∏ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏."""
    print("üîç –ü–æ–∏—Å–∫ –º–æ–∑–≥–æ–≤ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏...")
    print(f"üåê API URL: {api_url}")
    print(f"üß† –ü—Ä–æ–≤–µ—Ä—è—é –º–æ–∑–≥–∏: {brain_range.start}-{brain_range.stop-1}")
    print("-" * 80)
    
    brains_with_disabled = []
    brains_without_disabled = []
    errors = []
    
    for brain_id in brain_range:
        print(f"üß† –ü—Ä–æ–≤–µ—Ä—è—é –º–æ–∑–≥ #{brain_id}...", end=" ")
        result = check_brain_connections(brain_id, api_url)
        
        if result['status'] == 'success':
            if result['has_disabled']:
                brains_with_disabled.append(result)
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–≤—è–∑–∏: {result['disabled_connections']}")
                for disabled in result['disabled_list']:
                    print(f"   üîó –°–≤—è–∑—å {disabled['id']}: {disabled['from']} ‚Üí {disabled['to']} (–≤–µ—Å: {disabled['weight']})")
            else:
                brains_without_disabled.append(result)
                print("‚ö™ –í—Å–µ —Å–≤—è–∑–∏ –∞–∫—Ç–∏–≤–Ω—ã")
        else:
            errors.append(result)
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
    
    print("-" * 80)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"üü¢ –ú–æ–∑–≥–∏ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏: {len(brains_with_disabled)}")
    if brains_with_disabled:
        brain_ids = [b['brain_id'] for b in brains_with_disabled]
        print(f"   üìã ID –º–æ–∑–≥–æ–≤: {brain_ids}")
        
    print(f"‚ö™ –ú–æ–∑–≥–∏ —Ç–æ–ª—å–∫–æ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏: {len(brains_without_disabled)}")
    if brains_without_disabled:
        brain_ids = [b['brain_id'] for b in brains_without_disabled]
        print(f"   üìã ID –º–æ–∑–≥–æ–≤: {brain_ids}")
        
    print(f"‚ùå –û—à–∏–±–∫–∏: {len(errors)}")
    
    if brains_with_disabled:
        print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
        print(f"–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–≤—è–∑–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–∑–≥ #{brains_with_disabled[0]['brain_id']}")
        print("–í–∫–ª—é—á–∏—Ç–µ –ø–æ–∫–∞–∑ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–≤—è–∑–µ–π –∫–Ω–æ–ø–∫–æ–π —Å –∏–∫–æ–Ω–∫–æ–π Activity")

if __name__ == "__main__":
    print("üß† –ü–æ–∏—Å–∫ –º–æ–∑–≥–æ–≤ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        response = requests.get("http://localhost:8000/api/health")
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–æ")
        else:
            print(f"‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª–æ —Å—Ç–∞—Ç—É—Å {response.status_code}")
    except Exception as e:
        print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: {e}")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ API: cd api && python main.py")
        exit(1)
    
    # –ò—â–µ–º –º–æ–∑–≥–∏ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏
    find_brains_with_disabled_connections()